---
driver:
  name: docker

transport:
  name: <%= ENV['KITCHEN_TRANSPORT'] || 'ssh' %>
  use_internal_network: <%= ENV['KITCHEN_USE_INTERNAL_NETWORK'] || false %>

provisioner:
  hosts: workstations
  name: ansible_playbook
  roles_path: roles
  ansible_verbosity: 2
  ansible_verbose: true
  ansible_connection: ssh
  ansible_sudo: false
  playbook: <%= ENV['PLAYBOOK'] || './full.yml' %>

verifier:
  name: inspec
  use_sudo: false
  reporter:
    - cli
    - junit:reports/test-output.xml

platforms:
  - name: ubuntu18
    driver_config:
      image: ubuntu:18.04
      platform: ubuntu
      username: kitchen
      # Special config so we can enable systemd
      run_command: /sbin/init
      privileged: true
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service

  - name: ubuntu20
    driver_config:
      image: ubuntu:20.04
      platform: ubuntu
      username: kitchen
      # Special config so we can enable systemd
      run_command: /sbin/init
      privileged: true
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
    provisioner:
      ansible_apt_repo: null

  - name: centos7
    driver_config:
      image: centos:7
      platform: rhel
      # Special config so we can enable systemd
      run_command: /sbin/init
      privileged: true
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable sshd.service

  - name: centos8
    driver_config:
      image: centos:8
      platform: rhel
      # Special config so we can enable systemd
      run_command: /sbin/init
      privileged: true
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable sshd.service
    provisioner:
      custom_pre_install_command: >
        sudo dnf install -y epel-release;
        sudo dnf install -y ansible

  - name: amazonlinux2
    driver_config:
      image: amazonlinux
      platform: amazonlinux
      # Special config so we can enable systemd
      run_command: /sbin/init
      privileged: true
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable sshd.service
    provisioner:
      custom_pre_install_command: >
        sudo amazon-linux-extras install -y epel ansible2

suites:
  - name: default
    verifier:
      inputs:
        username: kitchen
      inspec_tests:
        - tests/roles/base
        - tests/roles/dodpki
        - tests/roles/docker
        - tests/roles/podman
        - tests/roles/kubernetes
        - tests/roles/python
        - tests/roles/nodejs
        - tests/roles/desktop
        - tests/roles/cloudfoundry
        - tests/roles/anaconda
        - tests/roles/miniconda
        - tests/roles/ruby
        - tests/roles/chefdk
        - tests/roles/R
        - tests/roles/terraform
        - tests/roles/vscode
        - tests/roles/vscode
        - tests/roles/atom
