---
image: quay.io/ansible/toolset:latest

services:
  - docker:dind

stages:
  - test
  - build
  - publish

variables:
  DOCKER_HOST: "tcp://docker:2375"
  PY_COLORS: 1

before_script:
  - apt-get update && apt-get -y install yamllint
  - docker -v
  - python -V
  - ansible --version
  - molecule --version
  - ansible-lint --version
  - yamllint --version

.role_test: &role_test
  stage: test
  script:
    - cd roles/$ROLE
    - molecule test
  tags:
    - docker

molecule_role_amazonworkspaces:
  <<: *role_test
  variables:
    ROLE: amazonworkspaces

molecule_role_asdf:
  <<: *role_test
  variables:
    ROLE: asdf

molecule_role_atom:
  <<: *role_test
  variables:
    ROLE: atom

molecule_role_awscli:
  <<: *role_test
  variables:
    ROLE: awscli

molecule_role_base:
  <<: *role_test
  variables:
    ROLE: base

molecule_role_chefdk:
  <<: *role_test
  variables:
    ROLE: chefdk

molecule_role_cf:
  <<: *role_test
  variables:
    ROLE: cf

molecule_role_chrome:
  <<: *role_test
  variables:
    ROLE: chrome

molecule_role_desktop:
  <<: *role_test
  variables:
    ROLE: desktop

molecule_role_docker:
  <<: *role_test
  variables:
    ROLE: docker

molecule_role_dodpki:
  <<: *role_test
  variables:
    ROLE: dodpki

molecule_role_java:
  <<: *role_test
  variables:
    ROLE: java

molecule_role_kubectl:
  <<: *role_test
  variables:
    ROLE: kubectl

molecule_role_nodejs:
  <<: *role_test
  variables:
    ROLE: nodejs

molecule_role_oc:
  <<: *role_test
  variables:
    ROLE: oc

molecule_role_podman:
  <<: *role_test
  variables:
    ROLE: podman

molecule_role_python:
  <<: *role_test
  variables:
    ROLE: python

molecule_role_rdev:
  <<: *role_test
  variables:
    ROLE: rdev

molecule_role_ruby:
  <<: *role_test
  variables:
    ROLE: ruby

molecule_role_terraform:
  <<: *role_test
  variables:
    ROLE: terraform

molecule_role_vagrant:
  <<: *role_test
  variables:
    ROLE: vagrant

molecule_role_virtualbox:
  <<: *role_test
  variables:
    ROLE: virtualbox

molecule_role_vscode:
  <<: *role_test
  variables:
    ROLE: vscode

build_collection:
  stage: build
  script:
    - ansible-galaxy collection build
  artifacts:
    paths:
      - '*.tar.gz'
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

publish_collection:
  stage: publish
  script:
    - ansible-galaxy collection publish ./*.tar.gz --token=${GALAXY_TOKEN}
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
